<launch>
    <group ns="rocket">
        <rosparam file="$(find drone_gnc)/config/rocket_parameters.yaml"/>
    </group>

    <group ns="control/mpc">
        <rosparam file="$(find drone_gnc)/config/control_mpc_parameters.yaml"/>
    </group>

    <group ns="guidance/mpc">
        <rosparam file="$(find drone_gnc)/config/guidance_mpc_parameters.yaml"/>
    </group>

    <!--    <group ns="filter">-->
    <!--        <rosparam file="$(find drone_gnc)/config/filter_parameters.yaml"/>-->
    <!--    </group>-->

    <group ns="filter">
        <rosparam file="$(find drone_gnc)/config/optitrack_filter_parameters.yaml"/>
    </group>

<!--       <node name="guidance" pkg="drone_gnc" type="fixed_guidance" machine="gnc_machine" cwd="node" output="screen">-->
<!--       </node>-->
    <rosparam param="fixed_guidance">false</rosparam>

<!--    <node name="guidance" pkg="drone_gnc" type="drone_guidance" machine="gnc_machine" cwd="node" output="screen">-->
<!--        <rosparam param="target_apogee">[1, 0, 30]</rosparam>-->
<!--    </node>-->


    <node name="control" pkg="drone_gnc" type="drone_control" machine="gnc_machine" cwd="node">
        <rosparam param="target_apogee">[0,0,0]</rosparam>
        <rosparam param="no_guidance">true</rosparam>
    </node>

    <node name="drone_fsm" pkg="drone_gnc" type="drone_fsm" machine="gnc_machine" cwd="node">
        <rosparam param="initial_state">"Idle"</rosparam>
    </node>

    <node name="navigation" pkg="drone_gnc" type="drone_navigation_optitrack" machine="gnc_machine" cwd="node"
          output="screen">
        <rosparam param="initial_state">[0,0,0, 0,0,0, 0,0,0,1, 0,0,0, 1, 1, 0, 0, 0,0,0, 0,0,0]</rosparam>
        <rosparam param="drone_dome">true</rosparam>
    </node>
</launch>


