<launch>
    <group ns="rocket">
        <rosparam file="$(find drone_gnc)/config/rocket_parameters.yaml"/>
    </group>

    <group ns="control/mpc">
        <rosparam file="$(find drone_gnc)/config/control_mpc_parameters.yaml"/>
    </group>

    <group ns="guidance/mpc">
        <rosparam file="$(find drone_gnc)/config/guidance_mpc_parameters.yaml"/>
    </group>

    <group ns="navigation">
        <rosparam file="$(find drone_gnc)/config/filter_parameters.yaml"/>
    </group>

    <!--   <node name="guidance" pkg="drone_gnc" type="fixed_guidance" machine="gnc_machine" cwd="node" output="screen">-->
    <!--       <rosparam param="speed">0.5</rosparam>-->
    <!--       <rosparam param="scaling">1</rosparam>-->
    <!--   </node>-->

    <node name="guidance" pkg="drone_gnc" type="drone_guidance" machine="gnc_machine" output="screen"
          launch-prefix="taskset -c 1">
        <rosparam param="target_apogee">[0, 0, 2]</rosparam>
        <rosparam param="target_land">[0.25, 0, 0.1]</rosparam>
    </node>

    <node name="control" pkg="drone_gnc" type="drone_control" machine="gnc_machine" output="screen"
          launch-prefix="taskset -c 3">
        <rosparam param="target_apogee">[0,0,1.5]</rosparam>
        <rosparam param="track_guidance">false</rosparam>
    </node>

    <node name="drone_fsm" pkg="drone_gnc" type="drone_fsm" machine="gnc_machine" output="screen" cwd="node">
        <rosparam param="initial_state">"Idle"</rosparam>
        <rosparam param="land_after_apogee">false</rosparam>
    </node>

    <node name="navigation" pkg="drone_gnc" type="drone_navigation_pixhawk" machine="gnc_machine"
          output="screen" launch-prefix="taskset -c 2">
        <rosparam param="initial_state">[0,0,0, 0,0,0, 0,0,0,1, 0,0,0]</rosparam>
        <rosparam param="estimate_params">true</rosparam>
        <rosparam param="init_estimated_params">true</rosparam>
        <rosparam param="use_gps">true</rosparam>
    </node>
</launch>


