<launch>
    <machine name="local" address="localhost"/>

    <group ns="rocket">
        <rosparam file="$(find tvc_simulator)/config/prototypes/drone/rocket_parameters.yaml"/>
    </group>

    <group ns="mpc">
        <rosparam file="$(find tvc_simulator)/config/prototypes/drone/mpc_parameters.yaml"/>
    </group>

    <group ns="filter">
        <rosparam file="$(find tvc_simulator)/config/prototypes/drone/filter_parameters.yaml"/>
    </group>

    <group ns="visualization">
        <rosparam file="$(find tvc_simulator)/config/prototypes/drone/visualization_parameters.yaml"/>
    </group>
    <!--    <node machine="raspberrypi" name="actuators_tests" pkg="tvc_simulator" type="actuators_tests.py" output="screen"/>-->

    <group>
        <machine name="raspberrypi" address="raspberrypi.local" user="pi" password="ert2021" timeout="10"
                 env-loader="/home/pi/catkin_ws/devel/remote_env_loader.sh"/>
        <include file="$(find drone_gnc)/launch/drone_gnc.launch"/>
        <node machine="raspberrypi" name="avionic_bridge" pkg="tvc_simulator" type="avionic_bridge.py"/>
    </group>

    <node machine="raspberrypi" name="navigation" pkg="tvc_simulator" type="drone_basic_navigation" cwd="node">
        <rosparam param="initial_state">[0,0,0, 0,0,0, 0,0,0,1, 0,0,0]</rosparam>
        <rosparam param="drone_dome">true</rosparam>
    </node>

    <!-- <node machine="raspberrypi" name="simulator_interface" pkg="tvc_simulator" type="simulator_interface" cwd="node" output="screen"/> -->

    <!-- <node machine="raspberrypi" name="control_interface" pkg="tvc_simulator" type="control_interface" cwd="node"/> -->
    <node machine="raspberrypi" name="control" pkg="tvc_simulator" type="drone_control" launch-prefix="nice -n -20" output="screen">
        <rosparam param="target_apogee">[0,0,1]</rosparam>
    </node>
    <node machine="raspberrypi" name="low_level_control" pkg="tvc_simulator" type="low_level_control.py" output="screen"/>

    <node machine="raspberrypi" name="optitrack_client" pkg="tvc_simulator" type="optitrack_client"/>

    <!-- transform drone_kalman to rocket state for visualization-->
    <node machine="local" name="drone_to_rocket_state" pkg="topic_tools" type="transform" args="/drone_state /simu_rocket_state tvc_simulator/State
          'tvc_simulator.msg.State(twist=m.twist, pose=m.pose, propeller_mass=0)'
          --import tvc_simulator"/>

    <!-- <node machine="raspberrypi" name="optitrack_client" pkg="tvc_simulator" type="optitrack_client"/> -->
    <node machine="local" name="visualization" pkg="tvc_simulator" type="visualization"/>
    <node machine="local" name="rqt_gui" pkg="rqt_gui" type="rqt_gui"
          args="--perspective-file $(find tvc_simulator)/rviz/drone_remote_control_GUI.perspective"/> -->
    <node machine="local" pkg="rosbag" type="record" name="recorder"
          args="record -a -O $(find tvc_simulator)/log/log.bag"/>

</launch>


