<launch>

    <group ns="rocket">
        <rosparam file="$(find drone_gnc)/config/rocket_parameters.yaml"/>
    </group>

    <group ns="environment">
        <rosparam file="$(find drone_simulator_interface)/config/environment_parameters.yaml"/>
    </group>

    <group ns="perturbation">
        <rosparam file="$(find drone_simulator_interface)/config/perturbations_parameters.yaml"/>
    </group>

    <node name="simulator_interface" pkg="drone_simulator_interface" type="simulator_interface" cwd = "node"  output ="screen">
        <rosparam param="use_servo_model">false</rosparam>
    </node>


    <!-- node that converts DroneState messages to State messages -->
<!--    <node name="drone_to_rocket_state" pkg="topic_tools" type="transform" args="/kalman_drone_state /kalman_rocket_state tvc_simulator/State-->
<!--          'tvc_simulator.msg.State(twist=m.twist, pose=m.pose, propeller_mass=0)'-->
<!--          &#45;&#45;import tvc_simulator"/>-->

    <node name="aerodynamic" pkg="real_time_simulator" type="aerodynamic.py" cwd = "node" />
<!--    <node name="disturbance" pkg="real_time_simulator" type="disturbance.py" cwd = "node"/>-->
    <node name="integrator" pkg="real_time_simulator" type="integrator" cwd = "node" output ="screen">
        <rosparam param="rail_azimuth">2</rosparam>
        <rosparam param="rail_zenith">0</rosparam>
        <rosparam param="rocket_roll">45</rosparam>
        <rosparam param="rail_length">0</rosparam>
        <rosparam param="start_trigger">"Control"</rosparam>
    </node>

</launch>


